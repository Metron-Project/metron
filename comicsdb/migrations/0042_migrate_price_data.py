# Generated by Django 5.2.7 on 2025-10-25 13:14

from django.db import migrations
from djmoney.money import Money

BATCH_SIZE = 1000


def copy_price_to_new_price(apps, schema_editor):
    """Copy data from old price field to new MoneyField"""
    Issue = apps.get_model("comicsdb", "Issue")
    issues_to_update = []

    for issue in Issue.objects.filter(price__isnull=False):
        issue.new_price = Money(issue.price, "USD")
        issues_to_update.append(issue)

        if len(issues_to_update) >= BATCH_SIZE:
            Issue.objects.bulk_update(issues_to_update, ["new_price"])
            issues_to_update = []

    if issues_to_update:  # Don't forget the remaining items
        Issue.objects.bulk_update(issues_to_update, ["new_price"])


def copy_new_price_to_price(apps, schema_editor):
    """Reverse migration - copy back from MoneyField to DecimalField"""
    Issue = apps.get_model("comicsdb", "Issue")
    issues_to_update = []
    for issue in Issue.objects.filter(new_price__isnull=False):
        issue.price = issue.new_price.amount
        issues_to_update.append(issue)

        if len(issues_to_update) >= BATCH_SIZE:
            Issue.objects.bulk_update(issues_to_update, ["price"])
            issues_to_update = []

    if issues_to_update:  # Don't forget the remaining items
        Issue.objects.bulk_update(issues_to_update, ["price"])


class Migration(migrations.Migration):
    dependencies = [
        ("comicsdb", "0041_add_new_price_moneyfield"),
    ]

    operations = [
        migrations.RunPython(copy_price_to_new_price, copy_new_price_to_price),
    ]

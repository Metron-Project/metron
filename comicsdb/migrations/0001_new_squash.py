# Generated by Django 3.0.2 on 2020-01-31 03:29

import django.contrib.postgres.fields
import django.contrib.postgres.operations
import django.db.models.deletion
import django.utils.timezone
import sorl.thumbnail.fields
from django.conf import settings
from django.db import migrations, models


def add_issue_created_on_data(apps, schema_editor):
    Issue = apps.get_model("comicsdb", "Issue")
    query = Issue.objects.all()
    for i in query:
        i.created_on = i.modified
        i.save()


def remove_issue_created_on_data(apps, schema_editor):
    Issue = apps.get_model("comicsdb", "Issue")
    Issue.objects.update(created_on=django.utils.timezone.now)


def add_multiple_created_on_data(apps, schema_editor):
    Arc = apps.get_model("comicsdb", "Arc")
    query = Arc.objects.all()
    for i in query:
        i.created_on = i.modified
        i.save()

    Character = apps.get_model("comicsdb", "Character")
    query = Character.objects.all()
    for i in query:
        i.created_on = i.modified
        i.save()

    Creator = apps.get_model("comicsdb", "Creator")
    query = Creator.objects.all()
    for i in query:
        i.created_on = i.modified
        i.save()

    Publisher = apps.get_model("comicsdb", "Publisher")
    query = Publisher.objects.all()
    for i in query:
        i.created_on = i.modified
        i.save()

    Series = apps.get_model("comicsdb", "Series")
    query = Series.objects.all()
    for i in query:
        i.created_on = i.modified
        i.save()

    Team = apps.get_model("comicsdb", "Team")
    query = Team.objects.all()
    for i in query:
        i.created_on = i.modified
        i.save()


def add_series_created_on_data(apps, schema_editor):
    Series = apps.get_model("comicsdb", "Series")
    query = Series.objects.all()
    for i in query:
        if not i.volume:
            i.volume = "1"
            i.save()


def remove_series_created_on_data(apps, schema_editor):
    Series = apps.get_model("comicsdb", "Series")
    query = Series.objects.all()
    for i in query:
        if i.volume == "1":
            i.volume = ""
            i.save()


def remove_multiple_created_on_data(apps, schema_editor):
    Arc = apps.get_model("comicsdb", "Arc")
    Arc.objects.update(created_on=django.utils.timezone.now)

    Character = apps.get_model("comicsdb", "Character")
    Character.objects.update(created_on=django.utils.timezone.now)

    Creator = apps.get_model("comicsdb", "Creator")
    Creator.objects.update(created_on=django.utils.timezone.now)

    Publisher = apps.get_model("comicsdb", "Publisher")
    Publisher.objects.update(created_on=django.utils.timezone.now)

    Series = apps.get_model("comicsdb", "Series")
    Series.objects.update(created_on=django.utils.timezone.now)

    Team = apps.get_model("comicsdb", "Team")
    Team.objects.update(created_on=django.utils.timezone.now)


class Migration(migrations.Migration):

    replaces = [
        ("comicsdb", "0001_squashed_migrations"),
        ("comicsdb", "0002_creator_alias"),
        ("comicsdb", "0003_issue_created_on"),
        ("comicsdb", "0004_add_created_on_fields"),
        ("comicsdb", "0005_require_series_volume"),
        ("comicsdb", "0006_auto_20190717_1550"),
        ("comicsdb", "0007_fix_credits_ordering"),
        ("comicsdb", "0008_add_sort_on_creator_name"),
        ("comicsdb", "0009_actually_sort_by_creator_name"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Arc",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("desc", models.TextField(blank=True, verbose_name="Description")),
                (
                    "image",
                    sorl.thumbnail.fields.ImageField(
                        blank=True, upload_to="arc/%Y/%m/%d/"
                    ),
                ),
                ("modified", models.DateTimeField(auto_now=True)),
            ],
            options={"ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("desc", models.TextField(blank=True, verbose_name="Description")),
                (
                    "wikipedia",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Wikipedia Slug"
                    ),
                ),
                (
                    "image",
                    sorl.thumbnail.fields.ImageField(
                        blank=True, upload_to="character/%Y/%m/%d/"
                    ),
                ),
                (
                    "alias",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=100),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                ("modified", models.DateTimeField(auto_now=True)),
            ],
            options={"ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="Creator",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("desc", models.TextField(blank=True, verbose_name="Description")),
                (
                    "wikipedia",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Wikipedia Slug"
                    ),
                ),
                (
                    "birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Birth"
                    ),
                ),
                (
                    "death",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Death"
                    ),
                ),
                (
                    "image",
                    sorl.thumbnail.fields.ImageField(
                        blank=True, upload_to="creator/%Y/%m/%d/"
                    ),
                ),
                ("modified", models.DateTimeField(auto_now=True)),
            ],
            options={"ordering": ["name", "name"]},
        ),
        migrations.CreateModel(
            name="Credits",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="comicsdb.Creator",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Credits", "ordering": ["creator__name"]},
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            max_length=150, verbose_name="Story Title"
                        ),
                        blank=True,
                        null=True,
                        size=None,
                    ),
                ),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("number", models.CharField(max_length=25)),
                ("cover_date", models.DateField(verbose_name="Cover Date")),
                (
                    "store_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="In Store Date"
                    ),
                ),
                ("desc", models.TextField(blank=True, verbose_name="Description")),
                (
                    "image",
                    sorl.thumbnail.fields.ImageField(
                        blank=True, upload_to="issue/%Y/%m/%d/", verbose_name="Cover"
                    ),
                ),
                ("modified", models.DateTimeField(auto_now=True)),
                ("arcs", models.ManyToManyField(blank=True, to="comicsdb.Arc")),
                (
                    "characters",
                    models.ManyToManyField(blank=True, to="comicsdb.Character"),
                ),
                (
                    "creators",
                    models.ManyToManyField(
                        blank=True, through="comicsdb.Credits", to="comicsdb.Creator"
                    ),
                ),
            ],
            options={"ordering": ["series__sort_name", "cover_date", "number"]},
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                (
                    "founded",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Year Founded"
                    ),
                ),
                ("desc", models.TextField(blank=True, verbose_name="Description")),
                (
                    "wikipedia",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Wikipedia Slug"
                    ),
                ),
                (
                    "image",
                    sorl.thumbnail.fields.ImageField(
                        blank=True, upload_to="publisher/%Y/%m/%d/", verbose_name="Logo"
                    ),
                ),
                ("modified", models.DateTimeField(auto_now=True)),
            ],
            options={"ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=25)),
                ("order", models.PositiveSmallIntegerField(unique=True)),
                ("notes", models.TextField(blank=True)),
                ("modified", models.DateTimeField(auto_now=True)),
            ],
            options={"ordering": ["order"]},
        ),
        migrations.CreateModel(
            name="SeriesType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("notes", models.TextField(blank=True)),
                ("modified", models.DateTimeField(auto_now=True)),
            ],
            options={"ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="Team",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("desc", models.TextField(blank=True, verbose_name="Description")),
                (
                    "wikipedia",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Wikipedia Slug"
                    ),
                ),
                (
                    "image",
                    sorl.thumbnail.fields.ImageField(
                        blank=True, upload_to="team/%Y/%m/%d/"
                    ),
                ),
                ("modified", models.DateTimeField(auto_now=True)),
                ("creators", models.ManyToManyField(blank=True, to="comicsdb.Creator")),
            ],
            options={"ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="Variant",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    sorl.thumbnail.fields.ImageField(
                        upload_to="variants/%Y/%m/%d/", verbose_name="Variant Cover"
                    ),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, verbose_name="Name"),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="comicsdb.Issue"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Series",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("sort_name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("volume", models.PositiveSmallIntegerField(blank=True, null=True)),
                (
                    "year_began",
                    models.PositiveSmallIntegerField(verbose_name="Year Began"),
                ),
                (
                    "year_end",
                    models.PositiveSmallIntegerField(
                        blank=True, null=True, verbose_name="Year Ended"
                    ),
                ),
                ("desc", models.TextField(blank=True, verbose_name="Description")),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "publisher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="comicsdb.Publisher",
                    ),
                ),
                (
                    "series_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="comicsdb.SeriesType",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Series",
                "ordering": ["sort_name", "year_began"],
            },
        ),
        migrations.AddField(
            model_name="issue",
            name="series",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="comicsdb.Series"
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="teams",
            field=models.ManyToManyField(blank=True, to="comicsdb.Team"),
        ),
        migrations.AddField(
            model_name="credits",
            name="issue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="comicsdb.Issue"
            ),
        ),
        migrations.AddField(
            model_name="credits",
            name="role",
            field=models.ManyToManyField(to="comicsdb.Role"),
        ),
        migrations.AddField(
            model_name="character",
            name="creators",
            field=models.ManyToManyField(blank=True, to="comicsdb.Creator"),
        ),
        migrations.AddField(
            model_name="character",
            name="teams",
            field=models.ManyToManyField(blank=True, to="comicsdb.Team"),
        ),
        migrations.AlterUniqueTogether(
            name="issue", unique_together={("series", "number")},
        ),
        migrations.AlterUniqueTogether(
            name="credits", unique_together={("issue", "creator")},
        ),
        django.contrib.postgres.operations.UnaccentExtension(),
        django.contrib.postgres.operations.TrigramExtension(),
        migrations.AddField(
            model_name="arc",
            name="edited_by",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="character",
            name="edited_by",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="creator",
            name="edited_by",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="edited_by",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="publisher",
            name="edited_by",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="series",
            name="edited_by",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="team",
            name="edited_by",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.SET_DEFAULT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterModelOptions(name="creator", options={"ordering": ["name"]},),
        migrations.AddField(
            model_name="creator",
            name="alias",
            field=django.contrib.postgres.fields.ArrayField(
                base_field=models.CharField(max_length=100),
                blank=True,
                null=True,
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="issue",
            name="created_on",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.RunPython(
            code=add_issue_created_on_data, reverse_code=remove_issue_created_on_data,
        ),
        migrations.AlterField(
            model_name="issue",
            name="created_on",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AddField(
            model_name="arc",
            name="created_on",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="character",
            name="created_on",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="creator",
            name="created_on",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="publisher",
            name="created_on",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="series",
            name="created_on",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="team",
            name="created_on",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.RunPython(
            code=add_multiple_created_on_data,
            reverse_code=remove_multiple_created_on_data,
        ),
        migrations.AlterField(
            model_name="arc",
            name="created_on",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name="character",
            name="created_on",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name="creator",
            name="created_on",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name="publisher",
            name="created_on",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name="series",
            name="created_on",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name="team",
            name="created_on",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.RunPython(
            code=add_series_created_on_data, reverse_code=remove_series_created_on_data,
        ),
        migrations.AlterField(
            model_name="series",
            name="volume",
            field=models.PositiveSmallIntegerField(verbose_name="Volume Number"),
        ),
        migrations.AlterUniqueTogether(
            name="series", unique_together={("publisher", "name", "volume")},
        ),
        migrations.AlterModelOptions(
            name="issue",
            options={
                "ordering": ["series__sort_name", "cover_date", "store_date", "number"]
            },
        ),
        migrations.AlterModelOptions(
            name="credits",
            options={
                "ordering": ["issue", "creator__name"],
                "verbose_name_plural": "Credits",
            },
        ),
    ]
